{"version":3,"sources":["logo.svg","components/Footer/Footer.js","firebase.js","components/agentsPage/NewTourForm.js","components/agentsPage/App.js","components/Navbar/Navbar.js","components/Tour/Tour.js","components/TourList/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","class","role","href","target","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","today","Date","toISOString","split","NewTourForm","props","handleUserInput","e","setState","newTourName","value","handleDateInput","newTourDate","handleTourDuration","newTourDuration","handleTourSeats","newTourSeats","nullValidation","state","writeNote","alert","addTour","className","onSubmit","preventDefault","type","placeholder","this","onChange","maxLength","min","onClick","Component","Header","title","totalTours","App","handleRemoveTour","id","database","child","remove","toursObjectName","toursObjectDate","toursObjectDuration","toursObjectSeats","push","set","name","date","duration","seats","ref","tours","on","snapshot","data","val","newToursAarray","inventoryName","toursObject","length","map","key","Navbar","basename","process","src","logo","alt","to","path","component","AgentsPage","Tour","handleInfo","showInfo","removeTour","imgUrl","info","TourList","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a3e7343e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a5527ad1.svg\";","import React from \"react\";\nimport \"./footer.scss\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <ul class=\"social \">\n        <li>\n          <a\n            class=\"tw-ic mr-3 \"\n            role=\"button \"\n            href=\"https://twitter.com/ChurkinSerge\"\n            target=\"_blank\"\n          >\n            <i class=\"fab fa-lg fa-twitter \"></i>\n          </a>\n        </li>\n\n        <li>\n          <a\n            class=\"li-ic mr-3 \"\n            role=\"button \"\n            href=\"https://www.linkedin.com/in/sergechurkin/\"\n            target=\"_blank\"\n          >\n            <i class=\"fab fa-lg fa-linkedin-in \"></i>\n          </a>\n        </li>\n\n        <li>\n          <a\n            class=\"git-ic mr-3 \"\n            role=\"button \"\n            href=\"https://github.com/sergechurkin-ca\"\n            target=\"_blank\"\n          >\n            <i class=\"fab fa-lg fa-github \"></i>\n          </a>\n        </li>\n\n        <li>\n          <a\n            class=\"email-ic mr-3 \"\n            role=\"button \"\n            href=\"mailto:sergechurkin@gmai.com\"\n          >\n            <i class=\"far fa-lg fa-envelope \"></i>\n          </a>\n        </li>\n      </ul>\n      <p class=\"trademark \">2020 created by serge churkin www.serge-web.com</p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import firebase from \"firebase/app\";\nimport \"firebase/database\";\n\n// Your web app's Firebase configuration\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAvmOCITwc2n7AfUZxmsvSg3Oh9vxiB6BM\",\n    authDomain: \"tours-inventory.firebaseapp.com\",\n    databaseURL: \"https://tours-inventory.firebaseio.com\",\n    projectId: \"tours-inventory\",\n    storageBucket: \"tours-inventory.appspot.com\",\n    messagingSenderId: \"227516769907\",\n    appId: \"1:227516769907:web:63ecc0d66b794542512c06\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React, { Component } from \"react\";\n\n// global variable - todays date\nconst today = new Date().toISOString().split(\"T\")[0];\n\nclass NewTourForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newTourName: \"\",\n      newTourDate: \"\",\n      newTourDuration: \"\",\n      newTourSeats: \"\",\n    };\n  }\n\n  // getting the value from text input box\n  handleUserInput = (e) => {\n    this.setState({\n      newTourName: e.target.value,\n    });\n  };\n  // getting the value from text input box\n  handleDateInput = (e) => {\n    this.setState({\n      newTourDate: e.target.value,\n    });\n  };\n  handleTourDuration = (e) => {\n    this.setState({\n      newTourDuration: e.target.value,\n    });\n  };\n\n  // check empty fields and fire next func to submit the form\n  handleTourSeats = (e) => {\n    this.setState({\n      newTourSeats: e.target.value,\n    });\n  };\n\n  nullValidation = (e) => {\n    if (\n      !this.state.newTourName == \" \" &&\n      !this.state.newTourDate == \" \" &&\n      !this.state.newTourDuration == \" \" &&\n      !this.state.newTourSeats == \" \"\n    ) {\n      this.writeNote();\n    } else {\n      alert(\"All fields are required\");\n    }\n  };\n\n  writeNote = () => {\n    // call a method that sets the noteContent for a note to\n    // the value of the input\n    this.props.addTour(\n      this.state.newTourName,\n      this.state.newTourDate,\n      this.state.newTourDuration,\n      this.state.newTourSeats\n    );\n\n    // Set newTourName back t≤o an empty string.\n    this.setState({\n      newTourName: \"\",\n      newTourDate: \"\",\n      newTourDuration: \"\",\n      newTourSeats: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"inputformWrapper\">\n        <form onSubmit={(e) => e.preventDefault()}>\n          <input\n            type=\"text\"\n            className=\"noteInput\"\n            placeholder=\"Add tour name\"\n            value={this.state.newTourName}\n            onChange={this.handleUserInput}\n            maxLength=\"20\"\n            // required\n          />\n          <div className=\"inputParamsWrapper\">\n            <input\n              type=\"date\"\n              // disabling past dates from global variable - today\n              min={today}\n              className=\"dateInput\"\n              value={this.state.newTourDate}\n              onChange={this.handleDateInput}\n              // required\n            />\n            <input\n              type=\"number\"\n              className=\"dateInput\"\n              placeholder=\"hrs\"\n              value={this.state.newTourDuration}\n              onChange={this.handleTourDuration}\n              // required\n            />\n            <input\n              type=\"number\"\n              className=\"dateInput\"\n              placeholder=\"pax\"\n              value={this.state.newTourSeats}\n              onChange={this.handleTourSeats}\n              // required\n            />\n            <button\n              className=\"noteButton\"\n              onClick={() => {\n                // if input is empty we check and than submit the form once all is set\n                this.nullValidation();\n              }}\n            >\n              Add\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default NewTourForm;\n","import React, { Component } from \"react\";\nimport firebase from \"../../firebase\";\nimport NewTourForm from \"./NewTourForm.js\";\nimport \"./App.scss\";\n\nconst Header = (props) => {\n  return (\n    <header className=\"header-booking\">\n      <h1> {props.title} </h1>\n      <span className=\"stats\"> Total tours: {props.totalTours} </span>\n      <ul>\n        <li> Action </li> <li> Tour Name </li> <li> Date </li>\n        <li> Duration </li> <li> Seats Total </li>\n      </ul>\n    </header>\n  );\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.database = firebase.database().ref();\n    this.state = {\n      tours: [],\n    };\n  }\n\n  componentDidMount() {\n    const dbRef = firebase.database().ref();\n\n    dbRef.on(\"value\", (snapshot) => {\n      // checking changes in db\n\n      const data = snapshot.val();\n\n      const newToursAarray = [];\n\n      for (let inventoryName in data) {\n        const toursObject = {\n          id: inventoryName,\n          tours: data[inventoryName],\n          name: data[inventoryName].name,\n          seats: data[inventoryName].seats,\n          date: data[inventoryName].date,\n          duration: data[inventoryName].duration,\n        };\n        newToursAarray.push(toursObject);\n      }\n\n      this.setState({\n        tours: newToursAarray,\n      });\n    });\n  }\n\n  // **********REMOVING ADN ADDING TOURS****************\n  handleRemoveTour = (id) => {\n    this.database.child(id).remove();\n  };\n  addTour(e) {\n    e.preventDefault();\n  }\n  addTour = (\n    toursObjectName,\n    toursObjectDate,\n    toursObjectDuration,\n    toursObjectSeats\n  ) => {\n    // console.log(toursObject);\n    this.database.push().set({\n      name: toursObjectName,\n      date: toursObjectDate,\n      duration: toursObjectDuration,\n      seats: toursObjectSeats,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"tour-booking-list\">\n        <Header title=\"Tour Inventory\" totalTours={this.state.tours.length} />\n        {this.state.tours.map((toursObject) => {\n          return (\n            <ul className=\"inventory-booking-Item\" key={toursObject.id}>\n              <li>\n                <button onClick={() => this.handleRemoveTour(toursObject.id)}>\n                  <i class=\"fas fa-backspace\"> </i>\n                </button>\n              </li>\n              <li> {toursObject.name} </li> <li> {toursObject.date} </li>\n              <li>\n                {toursObject.duration}\n                hrs\n              </li>\n              <li> {toursObject.seats} </li>\n            </ul>\n          );\n        })}\n        <NewTourForm addTour={this.addTour} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n} from \"react-router-dom\";\n\nimport logo from \"../../logo.svg\";\n\nimport AgentsPage from \"../agentsPage/App\";\nimport \"./navbar.scss\";\n\nfunction Navbar() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <nav className=\"navbar\">\n        <ul className=\"nav-links\">\n          <li>\n            <img src={logo} alt=\"bee logo\" className=\"logo\" />\n            <h2> tour_Bees / </h2>\n          </li>\n\n          <li>\n            <NavLink to={`${process.env.PUBLIC_URL}/`}>Home</NavLink>\n          </li>\n\n          <li>\n            <NavLink\n              to={`${process.env.PUBLIC_URL}/agentsPage`}\n              className=\"agents-page\"\n            >\n              Manage Inventory\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n      <Switch>\n        <Route\n          path={`${process.env.PUBLIC_URL}/agentsPage`}\n          component={AgentsPage}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport firebase from \"../../firebase\";\n\n// Data obtained from DB and rendered on page\nexport default class Tour extends Component {\n  constructor() {\n    super();\n    this.state = {\n      tours: [],\n      removeTour: \"\",\n      showInfo: false,\n    };\n  }\n\n  // button that toggles info\n  handleInfo = (id) => {\n    this.setState({\n      showInfo: id,\n    });\n  };\n\n  removeTour = (id) => {\n    this.setState({\n      showInfo: !id,\n    });\n  };\n\n  componentDidMount() {\n    const dbRef = firebase.database().ref();\n\n    dbRef.on(\"value\", (snapshot) => {\n      // checking changes in db\n      const data = snapshot.val();\n      const newToursAarray = [];\n\n      for (let inventoryName in data) {\n        const toursObject = {\n          id: inventoryName,\n          tours: data[inventoryName],\n          name: data[inventoryName].name,\n          seats: data[inventoryName].seats,\n          date: data[inventoryName].date,\n          duration: data[inventoryName].duration,\n          imgUrl:\n            \"https://source.unsplash.com/350x350/?\" + data[inventoryName].name,\n          // this is temporary tour info placeholder and will be removed and connetcted to real DB\n          info:\n            \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Commodi animi sint repudiandae amet quasi fuga quis ullam quibusdam. Magni ipsam iste aspernatur a saepe fugiat. \" +\n            data[inventoryName].name,\n        };\n        newToursAarray.push(toursObject);\n      }\n\n      this.setState({\n        tours: newToursAarray,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"tour-output-list\">\n        {this.state.tours.map((toursObject) => {\n          return (\n            <section className=\"tour-output-Item\">\n              <header class=\"header-tour\">\n                <h3> {toursObject.name} </h3>\n                <h5>\n                  info {/* button that toggles info */}\n                  <span onClick={() => this.handleInfo(toursObject.id)}>\n                    <i className=\"fas fa-caret-square-down\"> </i>\n                  </span>\n                </h5>\n              </header>\n              <ul className=\"inventory-output-item\" key={toursObject.id}>\n                <li> {toursObject.date} | </li>\n                <li>\n                  {toursObject.duration}\n                  hrs |\n                </li>\n                <li> {toursObject.seats} seats</li>\n              </ul>\n              <div className=\"img-container\">\n                {this.state.showInfo === toursObject.id && (\n                  // text that toggles when clicking on info button\n                  <p className=\"tour-info\">\n                    {toursObject.info}\n                    <span\n                      className=\"close-btn\"\n                      onClick={() => this.removeTour(toursObject.id)}\n                    >\n                      <i class=\"fas fa-chevron-up\"> </i>\n                    </span>\n                  </p>\n                )}\n                <img src={toursObject.imgUrl} alt=\"imageoftour\" />\n              </div>\n            </section>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Tour from \"../Tour\";\nimport \"./tourlist.scss\";\n\nexport default class TourList extends Component {\n  render() {\n    return (\n      <div>\n        <Tour />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Footer from \"./components/Footer/Footer.js\";\n\nimport \"./App.scss\";\nimport Navbar from \"./components/Navbar/Navbar\";\n\nimport TourList from \"./components/TourList/index\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar />\n        <TourList />\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>{\" \"}\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}